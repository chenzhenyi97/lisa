<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="js/jquery-1.12.4.min.js"></script>
    <script>
        var arr = [1,3,5,7,9];
        var obj = {0:1, 1:3, 2:5, 3:7, 4:9, length:5};
        //利用原生js的map方法遍历
        /*
        第一个参数：当前遍历到的元素
        第二个参数：当前遍历到的索引
        第三个参数：当前遍历的数组
        */
       //和原生forEach一样不能遍历伪数组
        arr.map(function(value, index, array){
            console.log(index, value, array);
        });
        /*
        第一个参数：要遍历的数组
        第二个参数：每遍历一个函数要执行的回调函数
        回调函数参数：
        第一个参数：当前遍历到的元素
        第二个参数：当前遍历到的索引
        ----------------------------
        注意点：和jQuery中的each静态方法一样可以遍历伪数组
        区别：each:遍历谁就返回谁；map:默认返回值是空数组
        区别2：each:不支持回调函数中对遍历数组进行处理
        map:可以在回调函数中对遍历数组进行处理，生成新的数组返回
        */
        $.map(arr, function(value, index){
            console.log(index,value);
        });

        var res = $.each(obj, function(index, value){
            console.log(index, value);
            return value+index;
        });

        var res2 = $.map(obj, function(value, index){
            console.log(index,value);
            return value+index;
        });

        console.log(res);
        console.log(res2);
    </script>
</head>
<body>
    
</body>
</html>